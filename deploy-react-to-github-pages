HOW TO DEPLOY YOUR REACT APP TO GITHUB PAGES.

PETE - using this blog post

https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f

as the basis for my actions, here is how I got the deployment of this already exising 
React App (which already had a github repository) to GitHub pages to work.

###################################################################################
1- Install GitHub Pages package as a dev-dependency.

I used "npm i gh-pages" as per https://www.npmjs.com/package/gh-pages

As a result I see a change in package.json (which is a good sign)

C:\Users\Pete>cd C:\Users\Pete\Documents\ReactApps\react-ed-psychologist

C:\Users\Pete\Documents\ReactApps\react-ed-psychologist>npm i gh-pages
npm WARN slick-carousel@1.8.1 requires a peer of jquery@>=1.8.0 but none is installed. You must install peer dependencies yourself.
npm WARN tsutils@3.17.1 requires a peer of typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta but none is installed. You must install peer dependencies yourself.
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32","arch":"x64"})
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\jest-haste-map\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32","arch":"x64"})
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\watchpack-chokidar2\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32","arch":"x64"})
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\webpack-dev-server\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32","arch":"x64"})

+ gh-pages@3.1.0
added 20 packages from 3 contributors and audited 1745 packages in 28.707s

58 packages are looking for funding
  run `npm fund` for details

found 1 low severity vulnerability
  run `npm audit fix` to fix them, or `npm audit` for details

###################################################################################
2- Go to the relevant repository, go into it's settings, scroll down to the "GitHub Pages" bit, 
click on "source", and select "master branch" from the drop down.

This will result in the appearance of message on the settings page: 

"Your site is ready to be published at https://peter-lancaster.github.io/ed-psychologist/."

https://peter-lancaster.github.io/ed-psychologist/

###################################################################################
3- Add properties to package.json file.

The first property we need to add at the top level homepage we will define this as a string and the value 
will be "http://{username}.github.io/{repo-name}" {username} is your GitHub username, and {repo-name} is the name 
of the GitHub repository you created it will look like this :

Second in the existing scripts property we to need to add predeploy and deploy.

"scripts": {
//...
"predeploy": "npm run build",
"deploy": "gh-pages -d build"
}

So my package.json now looks like this: 

{
  "homepage": "https://peter-lancaster.github.io/react-ed-psychologist/",
  "name": "ed-psychologist",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@emotion/core": "^10.0.28",
    "@emotion/styled": "^10.0.27",
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.5.0",
    "@testing-library/user-event": "^7.2.1",
    "formik": "^2.1.4",
    "gh-pages": "^3.1.0",
    "react": "^16.13.1",
    "react-burger-menu": "^2.6.17",
    "react-dom": "^16.13.1",
    "react-router-dom": "^5.2.0",
    "react-scripts": "3.4.1",
    "react-slick": "^0.26.1",
    "remixicon": "^2.5.0",
    "slick-carousel": "^1.8.1",
    "yup": "^0.29.1"
  },
  "scripts": {
    "predeploy": "npm run build",
    "deploy": "gh-pages -d build",
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

To be clear, the bits I've added to get this working are : 

i) "homepage": "https://peter-lancaster.github.io/react-ed-psychologist/",

ii) Within the "scripts" object : 

    "predeploy": "npm run build",
    "deploy": "gh-pages -d build",

###################################################################################
4- Deploy it to GitHub Pages.

Run the following command against your app:

npm run deploy

this command will create a branch named gh-pages this branch host your app, 
and homepage property you created in package.json file.

The following is what you see in the command prompt box as a result of "npm run deploy": 

Microsoft Windows [Version 10.0.18362.900]
(c) 2019 Microsoft Corporation. All rights reserved.

C:\Users\Pete\Documents\ReactApps\react-ed-psychologist>npm run deploy

> ed-psychologist@0.1.0 predeploy C:\Users\Pete\Documents\ReactApps\react-ed-psychologist
> npm run build

> ed-psychologist@0.1.0 build C:\Users\Pete\Documents\ReactApps\react-ed-psychologist
> react-scripts build

Creating an optimized production build...
Compiled with warnings.

./src/ContextProvider.js
  Line 24:40:  React Hook useEffect has a missing dependency: 'whichNavigation'. Either include 
  it or remove the dependency array  react-hooks/exhaustive-deps

./src/components/ContactFormik.js
  Line 2:20:  'Formik' is defined but never used        no-unused-vars
  Line 2:28:  'Field' is defined but never used         no-unused-vars
  Line 2:35:  'Form' is defined but never used          no-unused-vars
  Line 2:41:  'ErrorMessage' is defined but never used  no-unused-vars
  Line 3:13:  'Yup' is defined but never used           no-unused-vars

./src/components/HomePageCarousel.js
  Line 6:8:  'LeftArrow' is defined but never used  no-unused-vars

./src/components/CarouselItem.js
  Line 7:13:  img elements must have an alt prop, either with meaningful text, or an empty 
  string for decorative images  jsx-a11y/alt-text

./src/Header.js
  Line 9:12:  'isBurgerNav' is assigned a value but never used  no-unused-vars

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

File sizes after gzip:

  122.18 KB  build\static\js\2.a577d916.chunk.js
  18.98 KB   build\static\css\2.00b5ec64.chunk.css
  2.68 KB    build\static\js\main.77ded4ee.chunk.js
  1.45 KB    build\static\css\main.f9718c59.chunk.css
  787 B      build\static\js\runtime-main.c8ac3576.js

The project was built assuming it is hosted at /ed-psychologist/.
You can control this with the homepage field in your package.json.

The build folder is ready to be deployed.

Find out more about deployment here:

  bit.ly/CRA-deploy

> ed-psychologist@0.1.0 deploy C:\Users\Pete\Documents\ReactApps\react-ed-psychologist
> gh-pages -d build

Published

C:\Users\Pete\Documents\ReactApps\react-ed-psychologist>

###################################################################################

5 - Go to the relevant repository, go into it's settings, scroll down to the "GitHub Pages" bit, 
click on "source", and select "gh-pages branch" from the drop down.

If "gh-pages branch" is not present in the drop-down, refresh the page ("gh-pages branch" 
should then appear in the drop-down list).

###################################################################################

6 - Don't forget that every time you make a change to your repository, and want that reflected in gh-pages,
you will need to "npm run build" and THEN "npm run deploy".

###################################################################################

Reference for the above approach: https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f

###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################

However, the above approach to using github pages leaves us with a few problems: 

PROBLEM 1) When we go to https://peter-lancaster.github.io/react-ed-psychologist/ we see that the header and footer
are present, but the parts of the page that depend on react-router are not. When we click on a link that uses react-router
it sends us to https://peter-lancaster.github.io and only then do we see the website appear as we hoped / expected. 

SOLUTION 1) Problem 1 above is related to the way that github pages doesn't deal very well with react-router. We are losing 
the /react-ed-psychologist/ part of our URL, and ending up with only "https://peter-lancaster.github.io". A solution can be
found in these blog posts: 

    https://github.com/facebook/create-react-app/issues/1765

    gaearon commented on Mar 8, 2017 • 
    The homepage setting only affects paths to JS and CSS in the produced HTML. It can’t affect your 
    routing configuration.

    path='/' in your router configuration means you’re literally matching /. Only 
    https://rockchalkwushock.github.io/ would match /.

    But your project is on /rcws-development/. However if you change the routing configuration to say /rcws-development/ 
    then this won’t work in development on npm start because the development server serves from /.

    Use process.env.PUBLIC_URL in your route definitions so that they work both in development 
    and after deployment. For example: <Route path={process.env.PUBLIC_URL + '/'}>. This will be 
    empty in development and rcws-development (inferred from homepage) in production.

So in my particular example, my understanding is that this solution would involve changing 
my Routing from this: 

            <main>
              <Switch>
                <Route exact path ="/"><Home/></Route>
                <Route path ="/about"><About/></Route>
                <Route path ="/services"><Services/></Route>
                <Route path ="/contact-homegrown"><ContactHomeGrown/></Route>
                <Route path ="/contact-formik"><ContactFormik/></Route>
              </Switch>
            </main>

To this:
            <main>
              <Switch>
                <Route exact path ={process.env.PUBLIC_URL + "/"}><Home/></Route>
                <Route path ={process.env.PUBLIC_URL + "/about"}><About/></Route>
                <Route path ={process.env.PUBLIC_URL + "/services"}><Services/></Route>
                <Route path ={process.env.PUBLIC_URL + "/contact-homegrown"}><ContactHomeGrown/></Route>
                <Route path ={process.env.PUBLIC_URL + "/contact-formik"}><ContactFormik/></Route>
              </Switch>
            </main>

Another suggested neater way to get the same result is mentioned in the same blog entry (and in other places across
stackoverflow and other locations): 

    I know I am a bit late here but the BrowserRouter has a basename prop that can be used for that: 
    https://reacttraining.com/react-router/web/api/BrowserRouter/basename-string.

    <BrowserRouter basename={process.env.PUBLIC_URL}>
      {/* routes */}
    </BrowserRouter>
    
So for my example, this would mean changing my index.js file from this: 

    ReactDOM.render(
      <React.StrictMode>
        <ContextProvider>
          <Browser>
            <App />
          </Browser>
        </ContextProvider>
      </React.StrictMode>,
      document.getElementById('root')
    );
    
To this: 

    ReactDOM.render(
      <React.StrictMode>
        <ContextProvider>
          <Browser basename={process.env.PUBLIC_URL}>
            <App />
          </Browser>
        </ContextProvider>
      </React.StrictMode>,
      document.getElementById('root')
    );


###################################################################################


PROBLEM 2) When we click on any <a> links within the website that do not use react-router, we get a 404 page.

PROBLEM 3) When we click on any <a> links within the website that do not use react-router, we get a 404 page.


These blog posts are also interesting / useful.

https://www.freecodecamp.org/news/surge-vs-github-pages-deploying-a-create-react-app-project-c0ecbf317089/
https://itnext.io/so-you-want-to-host-your-single-age-react-app-on-github-pages-a826ab01e48

Gh-pages deployment problems with react-router
https://github.com/facebook/create-react-app/issues/1765
The homepage setting only affects paths to JS and CSS in the produced HTML. It can’t affect your routing configuration.

path='/' in your router configuration means you’re literally matching /. Only https://rockchalkwushock.github.io/ would match /.

But your project is on /rcws-development/. However if you change the routing configuration 
to say /rcws-development/ then this won’t work in development on 
npm start because the development server serves from /.

Two solutions:

Don’t use HTML5 history on GitHub pages. Use hashHistory instead. Your URLs will look like 
https://rockchalkwushock.github.io/rcws-development/#path/inside/the/app.

Use process.env.PUBLIC_URL in your route definitions so that they work both in development 
and after deployment. For example: <Route path={process.env.PUBLIC_URL + '/'}>. This will be 
empty in development and rcws-development (inferred from homepage) in production.

In the future, we might flip the development server to also take homepage into account (#1582). 
If this happens, your project would get served at localhost:3000/rcws-development even locally so 
you'd bump into this issue earlier (and would have to use process.env.PUBLIC_URL in route definitions 
anyway). But we have not really decided on this yet.

Hope this helps!


https://dev.to/caffiendkitten/react-router-with-github-pages-en3

https://github.community/t/my-react-project-doesnt-work-on-github-pages/10350/6

